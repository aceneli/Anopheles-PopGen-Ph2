#!/bin/bash
#$ -cwd           # Set the working directory for the job to the current directory
#$ -pe smp 2	  # Request 2 cores
#$ -l h_rt=240:0:0  # Request 240 hour runtime
#$ -l h_vmem=64G   # Request 128GB RAM
#$ -j y              # Combine the standard output and standard error stream
#$ -t 1-12           # No of text files for processing
#S -N CHROM_3L       # Give a specific name to the job
#$ -o log_file/      # output log of each job



# Command section
module load gcc/10.2.0
module load R/4.2.2-gcc10 

# Stop script if error occurs
set -e



LIST=/data3/scratch/bty155/Phase2/Allele_Frequency/list_of_files.txt 

FRQ=/data3/scratch/bty155/Phase2/Allele_Frequency/$(sed -n "${SGE_TASK_ID}p" $LIST)  

OUT=/data3/scratch/bty155/Phase2/Allele_Frequency/AF_plots/${SGE_TASK__ID}


#CODE

library(readr)
library(tidyr)
library(stringr)

#read file into dataframe
frq_data <- read_delim($FRQ, delim ='\t')

# Split the FREQ (<chr>) column by the tab character
frq_data<- separate(frq_data, '{FREQ}', into = c("AF1", "AF2","AF3", "AF4"), sep = "\t")


# Convert the column entries from character to numeric
frq_data$AF1 <- as.numeric(frq_data$AF1)
frq_data$AF2 <- as.numeric(frq_data$AF2)
frq_data$AF3 <- as.numeric(frq_data$AF3)
frq_data$AF4 <- as.numeric(frq_data$AF4)

#print column values
colSums(frq_data[, c("AF1", "AF2","AF3", "AF4")])


write.csv(frq_data, $OUT, row.names = FALSE, quote = FALSE)
